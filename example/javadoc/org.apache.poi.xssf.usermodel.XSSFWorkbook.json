{"class_comments":"High level representation of a SpreadsheetML workbook.  This is the first object most users\n will construct whether they are reading or writing a workbook.  It is also the\n top level object for creating new sheets/etc.","class_package":"org.apache.poi.xssf.usermodel","class_qualified_name":"org.apache.poi.xssf.usermodel.XSSFWorkbook","class_fields":{"DEFAULT_CHARACTER_WIDTH":"Width of one character of the default font in pixels. Same for Calibry and Arial.","PICTURE_TYPE_WPG":"","PICTURE_TYPE_EPS":"","_creationHelper":"cached instance of XSSFCreationHelper for this workbook","PICTURE_TYPE_TIFF":"","_missingCellPolicy":"The policy to apply in the event of missing or\n  blank cells when fetching from a row.\n See {@link org.apache.poi.ss.usermodel.Row.MissingCellPolicy}","logger":"","pivotTables":"List of all pivot tables in workbook","pictures":"array of pictures for this workbook","sheets":"this holds the XSSFSheet objects attached to this workbook","namedRanges":"this holds the XSSFName objects attached to this workbook","calcChain":"TODO","_udfFinder":"The locator of user-defined functions.\n By default includes functions from the Excel Analysis Toolpack","externalLinks":"External Links, for referencing names or cells in other workbooks.","pivotCaches":"","sharedStringSource":"shared string table - a cache of strings in this workbook","workbook":"The underlying XML bean","stylesSource":"A collection of shared objects used for styling content,\n e.g. fonts, cell styles, colors, etc.","namedRangesByName":"this holds the XSSFName objects attached to this workbook, keyed by lower-case name","PICTURE_TYPE_BMP":"","PICTURE_TYPE_GIF":"Images formats supported by XSSF but not by HSSF","mapInfo":"A collection of custom XML mappings","formatter":"Used to keep track of the data formatter so that all\n createDataFormatter calls return the same one for a given\n book.  This ensures that updates from one places is visible\n someplace else.","MAX_SENSITIVE_SHEET_NAME_LEN":"Excel silently truncates long sheet names to 31 chars.\n This constant is used to ensure uniqueness in the first 31 chars","COMMA_PATTERN":""},"class_name":"XSSFWorkbook","class_methods":{"setSheetVisibility###sheetIx###visibility":"","getCalculationChain":"Return the {@link CalculationChain} object for this workbook\n <p>\n   The calculation chain object specifies the order in which the cells in a workbook were last calculated\n <\/p>","commit":"","lockStructure":"Locks the structure of workbook.","validateWorkbookPassword###password":"Validate the password against the stored hash, the hashing method will be determined\n  by the existing password attributes","getActiveSheetIndex":"Convenience method to get the active sheet.  The active sheet is is the sheet\n which is currently displayed when the workbook is viewed in Excel.\n 'Selected' sheet(s) is a distinct concept.","onWorkbookCreate":"Create a new CTWorkbook with all values set to default","containsSheet###name###excludeSheetIdx":"Determines whether a workbook contains the provided sheet name.\n For the purpose of comparison, long names are truncated to 31 chars.","XSSFWorkbook###workbookType":"Create a new SpreadsheetML workbook.","iterator":"Alias for {@link #sheetIterator()} to allow\n foreach loops\n \n Note: remove() is not supported on this iterator.\n Use {@link #removeSheetAt(int)} to remove sheets instead.","getNameAt###nameIndex":"Get the named range at the given index.","getNameIndex###name":"Gets the named range index by name.","onSheetDelete###index":"Gracefully remove references to the sheet being deleted","reprocessNamedRanges":"","cloneSheet###sheetNum###newName":"Create an XSSFSheet from an existing sheet in the XSSFWorkbook.\n  The cloned sheet is a deep copy of the original but with a new given\n  name.","setSelectedTab###index":"We only set one sheet as selected for compatibility with HSSF.","setSheetHidden###sheetIx###state":"","getTheme":"Returns the Theme of current workbook.","createSheet":"Create an XSSFSheet for this workbook, adds it to the sheets and returns\n the high level representation.  Use this to create new sheets.","getNumberOfSheets":"Get the number of worksheets in the this workbook","getSheetVisibility###sheetIx":"","createDataFormat":"Returns the workbook's data format table (a factory for creating data format strings).","findFont###bold###color###fontHeight###name###italic###strikeout###typeOffset###underline":"Finds a font that matches the one with the supplied attributes","setForceFormulaRecalculation###value":"Whether the application shall perform a full recalculation when the workbook is opened.\n <p>\n Typically you want to force formula recalculation when you modify cell formulas or values\n of a workbook previously created by Excel. When set to true, this flag will tell Excel\n that it needs to recalculate all formulas in the workbook the next time the file is opened.\n <\/p>\n <p>\n Note, that recalculation updates cached formula results and, thus, modifies the workbook.\n Depending on the version, Excel may prompt you with \"Do you want to save the changes in <em>filename<\/em>?\"\n on close.\n <\/p>","XSSFWorkbook###file":"Constructs a XSSFWorkbook object from a given file.\n \n <p>Once you have finished working with the Workbook, you should close \n the package by calling  {@link #close()}, to avoid leaving file \n handles open.\n \n <p>Opening a XSSFWorkbook from a file has a lower memory footprint \n  than opening from an InputStream","getWorkbookType":"","newPackage###workbookType":"Create a new SpreadsheetML package and setup the default minimal content","getReferencePrintArea###sheetName###startC###endC###startR###endR":"","getCustomXMLMappings":"","getStylesSource":"Return a object representing a collection of shared objects used for styling content,\n e.g. fonts, cell styles, colors, etc.","setSheetHidden###sheetIx###hidden":"","setWorkbookPassword###password###hashAlgo":"Sets the workbook password.","createName":"","getSheetIndex###sheet":"Returns the index of the given sheet","getCellStyleAt###idx":"Get the cell style object at the given index","getNumberOfNames":"Get the number of named ranges in the this workbook","getExternalLinksTable":"Returns the list of {@link ExternalLinksTable} object for this workbook\n \n <p>The external links table specifies details of named ranges etc\n  that are referenced from other workbooks, along with the last seen\n  values of what they point to.<\/p>\n\n <p>Note that Excel uses index 0 for the current workbook, so the first\n  External Links in a formula would be '[1]Foo' which corresponds to\n  entry 0 in this list.<\/p>","setPrintArea###sheetIndex###startColumn###endColumn###startRow###endRow":"For the Convenience of Java Programmers maintaining pointers.","setRevisionsPassword###password###hashAlgo":"Sets the revisions password.","lockWindows":"Locks the windows that comprise the workbook.","saveNamedRanges":"marshal named ranges from the {@link #namedRanges} collection to the underlying CTWorkbook bean","getMissingCellPolicy":"Retrieves the current policy on what to do when\n  getting missing or blank cells from a row.\n The default is to return blank and null cells.\n  {@link MissingCellPolicy}","saveCalculationChain":"","lockRevision":"Locks the workbook for revisions.","unLockWindows":"Unlocks the windows that comprise the workbook.","setVBAProject###vbaProjectStream":"Adds a vbaProject.bin file to the workbook.  This will change the workbook\n type if necessary.","createDialogsheet###sheetname###dialogsheet":"","getNames###name":"Get the named ranges with the given name.\n <i>Note:<\/i>Excel named ranges are case-insensitive and\n this method performs a case-insensitive search.","getMapInfo":"","addOlePackage###oleData###label###fileName###command":"","getForceFormulaRecalculation":"Whether Excel will be asked to recalculate all formulas when the  workbook is opened.","validateSheetName###sheetName":"","getFontAt###idx":"Get the font at the given index number","removeSheetAt###index":"Removes sheet at the given index.<p>\n\n Care must be taken if the removed sheet is the currently active or only selected sheet in\n the workbook. There are a few situations when Excel must have a selection and/or active\n sheet. (For example when printing - see Bug 40414).<br>\n\n This method makes sure that if the removed sheet was active, another sheet will become\n active in its place.  Furthermore, if the removed sheet was the only selected sheet, another\n sheet will become selected.  The newly active/selected sheet will have the same index, or\n one less if the removed sheet was the last in the workbook.","getFirstVisibleTab":"Gets the first tab that is displayed in the list of tabs in excel.","workbookProtectionPresent":"","validateSheetIndex###index":"Validate sheet index","getAllPictures":"Gets all pictures from the Workbook.","getSharedStringSource":"Returns SharedStringsTable - tha cache of string for this workbook","getPivotTables":"","addSheet###sheetname":"","createAndStoreName###ctName":"","getSheetName###sheetIx":"Get the sheet name","setPrintArea###sheetIndex###reference":"Sets the printarea for the sheet provided\n <p>\n i.e. Reference = $A$1:$B$2","sheetIterator":"Returns an iterator of the sheets in the workbook\n in sheet order. Includes hidden and very hidden sheets.\n\n Note: remove() is not supported on this iterator.\n Use {@link #removeSheetAt(int)} to remove sheets instead.","getNumCellStyles":"Get the number of styles the workbook contains","getAllNames":"Get a list of all the named ranges in the workbook.","setHidden###hiddenFlag":"","getName###name":"Get the first named range with the given name.\n\n Note: names of named ranges are not unique as they are scoped by sheet.\n {@link #getNames(String name)} returns all named ranges with the given name.","XSSFWorkbook###pkg":"Constructs a XSSFWorkbook object given a OpenXML4J <code>Package<\/code> object,\n  see <a href=\"http://poi.apache.org/oxml4j/\">http://poi.apache.org/oxml4j/<\/a>.\n \n <p>Once you have finished working with the Workbook, you should close the package\n by calling either {@link #close()} or {@link OPCPackage#close()}, to avoid \n leaving file handles open.\n \n <p>Creating a XSSFWorkbook from a file-backed OPC Package has a lower memory\n  footprint than an InputStream backed one.","parseSheet###shIdMap###ctSheet":"Not normally to be called externally, but possibly to be overridden to avoid\n the DOM based parse of large sheets (see examples).","setFirstVisibleTab###index":"Sets the first tab that is displayed in the list of tabs in excel.","setActiveSheet###index":"Convenience method to set the active sheet.  The active sheet is is the sheet\n which is currently displayed when the workbook is viewed in Excel.\n 'Selected' sheet(s) is a distinct concept.","updateNamedRangesAfterSheetReorder###oldIndex###newIndex":"update sheet-scoped named ranges in this workbook after changing the sheet order\n of a sheet at oldIndex to newIndex.\n Sheets between these indices will move left or right by 1.","getCreationHelper":"Returns an object that handles instantiating concrete\n  classes of the various instances for XSSF.","XSSFWorkbook":"Create a new SpreadsheetML workbook.","getUniqueSheetName###srcName":"Generate a valid sheet name based on the existing one. Used when cloning sheets.","addPivotCache###rId":"Add pivotCache to the workbook","addPicture###is###format":"Adds a picture to the workbook.","onDocumentRead":"","updateActiveSheetAfterSheetReorder###oldIndex###newIndex":"","isDate1904":"Gets a boolean value that indicates whether the date systems used in the workbook starts in 1904.\n <p>\n The default value is false, meaning that the workbook uses the 1900 date system,\n where 1/1/1900 is the first day in the system..\n <\/p>","isStructureLocked":"Specifies a boolean value that indicates whether structure of workbook is locked. <br>\n A value true indicates the structure of the workbook is locked. Worksheets in the workbook can't be moved,\n deleted, hidden, unhidden, or renamed, and new worksheets can't be inserted.<br>\n A value of false indicates the structure of the workbook is not locked.<br>","getAllEmbedds":"Get the document's embedded files.","isMacroEnabled":"Are we a normal workbook (.xlsx), or a\n  macro enabled workbook (.xlsm)?","removeName###name":"As {@link #removeName(String)} is not necessarily unique\n (name + sheet index is unique), this method is more accurate.","createBuiltInName###builtInName###sheetNumber":"Generates a NameRecord to represent a built-in region","onDeleteFormula###cell":"Fired when a formula is deleted from this workbook,\n for example when calling cell.setCellFormula(null)","cloneSheet###sheetNum":"Create an XSSFSheet from an existing sheet in the XSSFWorkbook.\n  The cloned sheet is a deep copy of the original.","getSheetIndex###name":"Returns the index of the sheet by his name (case insensitive match)","safeGetWorkbookProtection":"","setVBAProject###macroWorkbook":"Adds a vbaProject.bin file taken from another, given workbook to this one.","getSpreadsheetVersion":"Returns the spreadsheet version (EXCLE2007) of this workbook","unLock":"Removes the workbook protection settings","getSheetAt###index":"Get the XSSFSheet object at the given index.","unLockRevision":"Unlocks the workbook for revisions.","removeName###nameIndex":"Remove the named range at the given index.","getBuiltInName###builtInCode###sheetNumber":"","addRelation###rp###target":"","XSSFWorkbook###is":"Constructs a XSSFWorkbook object, by buffering the whole stream into memory\n  and then opening an {@link OPCPackage} object for it.\n \n <p>Using an {@link InputStream} requires more memory than using a File, so\n  if a {@link File} is available then you should instead do something like\n   <pre><code>\n       OPCPackage pkg = OPCPackage.open(path);\n       XSSFWorkbook wb = new XSSFWorkbook(pkg);\n       // work with the wb object\n       ......\n       pkg.close(); // gracefully closes the underlying zip file\n   <\/code><\/pre>","linkExternalWorkbook###name###workbook":"Adds the External Link Table part and relations required to allow formulas \n  referencing the specified external workbook to be added to this one. Allows\n  formulas such as \"[MyOtherWorkbook.xlsx]Sheet3!$A$5\" to be added to the \n  file, for workbooks not already linked / referenced.\n\n  Note: this is not implemented and thus currently throws an Exception stating this.","validateRevisionsPassword###password":"Validate the password against the stored hash, the hashing method will be determined\n  by the existing password attributes","setSheetName###sheetIndex###sheetname":"Set the sheet name.","createSheet###sheetname":"Create a new sheet for this Workbook and return the high level representation.\n Use this to create new sheets.\n\n <p>\n     Note that Excel allows sheet names up to 31 chars in length but other applications\n     (such as OpenOffice) allow more. Some versions of Excel crash with names longer than 31 chars,\n     others - truncate such names to 31 character.\n <\/p>\n <p>\n     POI's SpreadsheetAPI silently truncates the input argument to 31 characters.\n     Example:\n\n     <pre><code>\n     Sheet sheet = workbook.createSheet(\"My very long sheet name which is longer than 31 chars\"); // will be truncated\n     assert 31 == sheet.getSheetName().length();\n     assert \"My very long sheet name which i\" == sheet.getSheetName();\n     <\/code><\/pre>\n <\/p>\n\n Except the 31-character constraint, Excel applies some other rules:\n <p>\n Sheet name MUST be unique in the workbook and MUST NOT contain the any of the following characters:\n <ul>\n <li> 0x0000 <\/li>\n <li> 0x0003 <\/li>\n <li> colon (:) <\/li>\n <li> backslash (\\) <\/li>\n <li> asterisk (*) <\/li>\n <li> question mark (?) <\/li>\n <li> forward slash (/) <\/li>\n <li> opening square bracket ([) <\/li>\n <li> closing square bracket (]) <\/li>\n <\/ul>\n The string MUST NOT begin or end with the single quote (') character.\n <\/p>\n\n <p>\n See {@link org.apache.poi.ss.util.WorkbookUtil#createSafeSheetName(String nameProposal)}\n      for a safe way to create valid names\n <\/p>","updateName###name###oldName":"","setMissingCellPolicy###missingCellPolicy":"Sets the policy on what to do when\n  getting missing or blank cells from a row.\n This will then apply to all calls to\n  {@link Row#getCell(int)}}. See\n  {@link MissingCellPolicy}","addToolPack###toopack":"Register a new toolpack in this workbook.","isWindowsLocked":"Specifies a boolean value that indicates whether the windows that comprise the workbook are locked. <br>\n A value of true indicates the workbook windows are locked. Windows are the same size and position each time the\n workbook is opened.<br>\n A value of false indicates the workbook windows are not locked.","unLockStructure":"Unlocks the structure of workbook.","setSheetOrder###sheetname###pos":"sets the order of appearance for a given sheet.","getUDFFinder":"Returns the locator of user-defined functions.\n <p>\n The default instance extends the built-in functions with the Excel Analysis Tool Pack.\n To set / evaluate custom functions you need to register them as follows:\n\n\n\n <\/p>","isRevisionLocked":"Specifies a boolean value that indicates whether the workbook is locked for revisions.","getNumberOfFonts":"Get the number of fonts in the this workbook","isSheetVeryHidden###sheetIx":"","XSSFWorkbook###path":"Constructs a XSSFWorkbook object given a file name.\n\n \n <p>Once you have finished working with the Workbook, you should close \n the package by calling  {@link #close()}, to avoid leaving file \n handles open.\n \n <p>Opening a XSSFWorkbook from a file has a lower memory footprint \n  than opening from an InputStream","isSheetHidden###sheetIx":"","isHidden":"","getCTWorkbook":"Return the underlying XML bean","setPivotTables###pivotTables":"","removePrintArea###sheetIndex":"Delete the printarea for the sheet specified","getTable###name":"Returns the data table with the given name (case insensitive).","addPicture###pictureData###format":"Adds a picture to the workbook.","setWorkbookType###type":"Sets whether the workbook will be an .xlsx or .xlsm (macro-enabled) file.","getPrintArea###sheetIndex":"Retrieves the reference for the printarea of the specified sheet, the sheet name is appended to the reference even if it was not specified.","getSheet###name":"Get sheet with the given name (case insensitive match)","createCellStyle":"Create a new XSSFCellStyle and add it to the workbook's style table","createFont":"Create a new Font and add it to the workbook's font table","beforeDocumentRead":""}}